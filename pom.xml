<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>unifiprojects</groupId>
	<artifactId>appichetto-parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<jacoco.version>0.8.3</jacoco.version>
		<junit.version>4.12</junit.version>
		<assertj.version>3.11.1</assertj.version>
		<hibernate.version>5.2.6.Final</hibernate.version>
		<hsqldb.version>2.3.2</hsqldb.version>
		<javaee-api.version>7.0</javaee-api.version>
		<testcontainer.version>1.10.5</testcontainer.version>
		<postgresql.version>9.4.1212.jre6</postgresql.version>
		<guice.version>4.2.2</guice.version>
		<sonar.exclusions>**/models/**, **/exceptions/**,
			**/swingviews/utils/**</sonar.exclusions>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-bom</artifactId>
				<version>2.11.1</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>0.27.2</version>
					<configuration>
						<images>
							<image>
								<alias>db</alias>
								<name>postgres:10</name>
								<run>
									<ports>
										<port>5432:5432</port>
									</ports>
									<env>
										<POSTGRES_USER>docker</POSTGRES_USER>
										<POSTGRES_PASSWORD>docker</POSTGRES_PASSWORD>
										<POSTGRES_DB>docker</POSTGRES_DB>
									</env>
									<wait>
										<log>database system is ready to accept connections</log>
									</wait>
								</run>
							</image>
						</images>
					</configuration>
					<executions>
						<execution>
							<id>docker:start</id>
							<phase>pre-integration-test</phase>
							<goals>
								<goal>start</goal>
							</goals>
						</execution>
						<execution>
							<id>docker:stop</id>
							<phase>post-integration-test</phase>
							<goals>
								<goal>stop</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>3.0.0</version>
					<executions>
						<execution>
							<id>add-it-source</id>
							<phase>generate-test-sources</phase>
							<goals>
								<goal>add-test-source</goal>
							</goals>
							<configuration>
								<sources>
									<source>src/it/java</source>
								</sources>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.1</version>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.22.1</version>
					<executions>
						<execution>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
				</plugin>


				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.22.1</version>

				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>3.0.1</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<phase>package</phase>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.version}</version>
					<configuration>

						<excludes>
							<esclude>**/Main.*</esclude>
							<esclude>**/models/**</esclude>
							<esclude>**/exceptions/**</esclude>
							<esclude>**/swingviews/utils/**</esclude>
						</excludes>
					</configuration>

					<executions>
						<execution>
							<goals>
								<!-- binds by default to the phase "initialize" -->
								<goal>prepare-agent</goal>
								<!-- binds by default to the phase "verify" -->
								<goal>report</goal>
							</goals>
						</execution>

						<execution>
							<id>jacoco-check</id>
							<goals>
								<goal>check</goal>
							</goals>
							<configuration>

								<rules>
									<rule>
										<element>PACKAGE</element>
										<limits>
											<limit>
												<counter>LINE</counter>
												<value>COVEREDRATIO</value>
												<minimum>0.5</minimum>
											</limit>
										</limits>
									</rule>
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.pitest</groupId>
					<artifactId>pitest-maven</artifactId>
					<version>1.4.3</version>
					<configuration>
						<targetClasses>
							<param>com.unifiprojects.app.appichetto/src/main/**/controllers/*</param>
							<param>com.unifiprojects.app.appichetto/src/main/**/repositories/*</param>
							<param>com.unifiprojects.app.appichetto/src/main/**/swingviews/*</param>
							<param>com.unifiprojects.app.appichetto/src/main/**/transactionhandlers/*</param>
							<param>com.unifiprojects.app.appichetto/src/main/**/managers/*</param>
						</targetClasses>
						<targetTests>
							<param>com.unifiprojects.app.appichetto/src/test/**</param>
						</targetTests>
						<mutators>
							<mutator>NEW_DEFAULTS</mutator>
						</mutators>
						<mutationThreshold>85</mutationThreshold>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.eluder.coveralls</groupId>
					<artifactId>coveralls-maven-plugin</artifactId>
					<version>4.3.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.4</version>
					<configuration>
						<archive>
							<manifest>
								<mainClass>com.unifiprojects.app.appichetto.App</mainClass>
							</manifest>
						</archive>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>

